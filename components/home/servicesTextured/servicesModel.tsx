/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import {
  useGLTF,
  useAnimations,
  useHelper,
  useCamera,
  Bounds,
  useBounds,
  OrbitControls,
  ContactShadows,
} from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame, useThree } from "@react-three/fiber";
import {
  Camera,
  CameraHelper,
  MathUtils,
  PerspectiveCamera,
  PointLight,
} from "three";
import { compose } from "@mui/system";

type GLTFResult = GLTF & {
  nodes: {
    Table: THREE.Mesh;
    Table_Legs: THREE.Mesh;
    Cube005: THREE.Mesh;
    Cube005_1: THREE.Mesh;
    Cube005_2: THREE.Mesh;
    Cube005_3: THREE.Mesh;
    Cube005_4: THREE.Mesh;
    Cube005_5: THREE.Mesh;
    Cube011: THREE.Mesh;
    Cube011_1: THREE.Mesh;
    Cube013: THREE.Mesh;
    Cube013_1: THREE.Mesh;
    Cube013_2: THREE.Mesh;
    Cube013_3: THREE.Mesh;
    Cube014: THREE.Mesh;
    Cube014_1: THREE.Mesh;
    Cube014_2: THREE.Mesh;
    Cube014_3: THREE.Mesh;
    Cube014_4: THREE.Mesh;
    Cube014_5: THREE.Mesh;
    Cube014_6: THREE.Mesh;
    Cube014_7: THREE.Mesh;
    Cube014_8: THREE.Mesh;
    Cube014_9: THREE.Mesh;
    Wall_Plain_1: THREE.Mesh;
    Wall_Plain_2: THREE.Mesh;
    Wall_Plain_3: THREE.Mesh;
    Cube019: THREE.Mesh;
    Cube019_1: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane002_1: THREE.Mesh;
    Plane002_2: THREE.Mesh;
    Plane002_3: THREE.Mesh;
    Plane002_4: THREE.Mesh;
    Plane002_5: THREE.Mesh;
    Plane002_6: THREE.Mesh;
    Plane002_7: THREE.Mesh;
    Plane002_8: THREE.Mesh;
    Mobile_Stand: THREE.Mesh;
    Laptop_Stand: THREE.Mesh;
    Cube020: THREE.Mesh;
    Cube020_1: THREE.Mesh;
    Cube020_2: THREE.Mesh;
    Cube020_3: THREE.Mesh;
    Cube020_4: THREE.Mesh;
    Cube020_5: THREE.Mesh;
    Cube020_6: THREE.Mesh;
    Cube020_7: THREE.Mesh;
    Cube020_8: THREE.Mesh;
    Cube021: THREE.Mesh;
    Cube021_1: THREE.Mesh;
    Cube021_2: THREE.Mesh;
    Cube021_3: THREE.Mesh;
    Cube021_4: THREE.Mesh;
    Cube021_5: THREE.Mesh;
    Cube021_6: THREE.Mesh;
    Cube021_7: THREE.Mesh;
    Cube021_8: THREE.Mesh;
    Circle001: THREE.Mesh;
    Circle001_1: THREE.Mesh;
    Circle001_2: THREE.Mesh;
    Bit_coin_w_emmisin: THREE.Mesh;
    Circle004: THREE.Mesh;
    Circle004_1: THREE.Mesh;
    Bitcoin_Symbol: THREE.Mesh;
    Circle003: THREE.Mesh;
    Circle003_1: THREE.Mesh;
  };
  materials: {
    ["Material.035"]: THREE.MeshStandardMaterial;
    ["Table Legs"]: THREE.MeshStandardMaterial;
    ["Material.023"]: THREE.MeshStandardMaterial;
    ["Material.024"]: THREE.MeshStandardMaterial;
    ["Material.025"]: THREE.MeshStandardMaterial;
    ["Material.026"]: THREE.MeshStandardMaterial;
    ["Material.027"]: THREE.MeshStandardMaterial;
    ["Material.028"]: THREE.MeshStandardMaterial;
    ["Material.011"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.045"]: THREE.MeshStandardMaterial;
    ["Material.046"]: THREE.MeshStandardMaterial;
    ["Material.030"]: THREE.MeshStandardMaterial;
    ["Material.031"]: THREE.MeshStandardMaterial;
    ["Material.032"]: THREE.MeshStandardMaterial;
    ["Material.048"]: THREE.MeshStandardMaterial;
    ["Material.036"]: THREE.MeshStandardMaterial;
    ["Material.037"]: THREE.MeshStandardMaterial;
    ["Material.038"]: THREE.MeshStandardMaterial;
    ["Material.039"]: THREE.MeshStandardMaterial;
    ["Material.040"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.014"]: THREE.MeshStandardMaterial;
    ["Material.015"]: THREE.MeshStandardMaterial;
    ["Material.016"]: THREE.MeshStandardMaterial;
    ["Material.017"]: THREE.MeshStandardMaterial;
    ["Material.018"]: THREE.MeshStandardMaterial;
    ["Material.019"]: THREE.MeshStandardMaterial;
    ["Material.020"]: THREE.MeshStandardMaterial;
    ["Material.021"]: THREE.MeshStandardMaterial;
    ["Material.022"]: THREE.MeshStandardMaterial;
    ["Material.013"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["Material.054"]: THREE.MeshStandardMaterial;
    ["Material.055"]: THREE.MeshStandardMaterial;
    ["Material.056"]: THREE.MeshStandardMaterial;
    ["Material.057"]: THREE.MeshStandardMaterial;
    ["Material.058"]: THREE.MeshStandardMaterial;
    ["Material.075"]: THREE.MeshStandardMaterial;
    ["Material.076"]: THREE.MeshStandardMaterial;
    ["Material.077"]: THREE.MeshStandardMaterial;
    ["Material.078"]: THREE.MeshStandardMaterial;
    ["Material.051"]: THREE.MeshStandardMaterial;
    ["Material.052"]: THREE.MeshStandardMaterial;
    ["Material.053"]: THREE.MeshStandardMaterial;
    ["Material.041"]: THREE.MeshStandardMaterial;
    ["Material.080"]: THREE.MeshStandardMaterial;
    ["Material.079"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ActionName =
  | "Table"
  | "Table Legs"
  | "Rubics Cube"
  | "Laptop"
  | "Occulus"
  | "Car"
  | "Wall Plain_1"
  | "Wall Plain_2"
  | "Wall Plain_3"
  | "Oculus_Remotes"
  | "Mobile"
  | "Mobile_Stand"
  | "Laptop_Stand"
  | "Gaming Consol 1"
  | "Gaming Consol 2"
  | "Plant"
  | "Bit coin w emmisin"
  | "Bit Coin 1.001"
  | "Circle.002Action"
  | "Bit Coin 1Action";

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

export function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const [clicked, setClicked] = useState(null);
  const { nodes, materials, animations } = useGLTF(
    "/assets/models/Services_Final.glb"
  ) as unknown as GLTFResult;
  const { actions } = useAnimations(animations, group);

  const laptopRef = useRef(null);
  const oculusRef = useRef(null);
  const phoneRef = useRef(null);
  const cryptoRef = useRef(null);
  const consoleRef = useRef(null);

  const [zoomLaptop, setLaptopZoom] = useState(false);
  const [zoomOculus, setZoomOculus] = useState(false);
  const [zoomPhone, setZoomPhone] = useState(false);
  const [zoomCrypto, setZoomCrypto] = useState(false);
  const [zoomConsole, setZoomConsole] = useState(false);

  const vec = new THREE.Vector3();
  const light = useRef();
  useFrame((state) => {
    const step = 0.05;

    // if zoom
    // if (zoomLaptop) {
    //   setZoomOculus(false);
    //   setZoomPhone(false);
    //   state.camera.lookAt(-0.28, 1.19, 0.14);
    //   state.camera.position.lerp(vec.set(0.4, 1.9, 0.14), step);
    // } else if (zoomOculus) {
    //   setZoomPhone(false);
    //   setLaptopZoom(false);
    //   state.camera.lookAt(0.2, 0.99, 0.95);
    //   state.camera.position.lerp(vec.set(0.9, 1.4, 1.6), step);
    // } else if (zoomPhone) {
    //   setZoomOculus(false);
    //   setLaptopZoom(false);
    //   state.camera.lookAt(0.02, 1.11, -0.98);
    //   state.camera.position.lerp(vec.set(0.6, 1.3, -0.58), step);
    // } else if (zoomConsole) {
    //   setZoomOculus(false);
    //   setLaptopZoom(false);
    //   state.camera.lookAt(-0.2, 0.96, -0.42);
    //   state.camera.position.lerp(vec.set(0.2, 1.2, -0.22), step);
    // } else {
    //   state.camera?.position.lerp(vec.set(5.99, 1.21, -0.008), 0.5);
    //   state.camera.lookAt(3, 1, 0);
    // }

    state.camera.updateProjectionMatrix();
  });

  const Camera = () => {
    const [width, setWidth] = useState<any>();

    useEffect(() => {
      if (window !== undefined) {
        setWidth(window.innerWidth);
      }
    }, [width]);

    useThree(({ camera }) => {
      camera.position.set(5.99, 1.9, 3.5);

      // camera.position.set(5.99, 1.21, -0.008);
      // camera.position.set(-23.625, 7.45, 9.85);
    });
    useFrame(({ camera }) => {
      // console.log("camera", camera.position);
      // console.log("rot", camera.rotation);
    });
    return null;
  };

  const Lights = () => {
    const light = useRef(null);
    useHelper(light, PointLight, 1, "red");

    return (
      <>
        <ambientLight intensity={10} color={0x404040} />
        <pointLight ref={light} position={[12.5, 5, 8.7]} />
      </>
    );
  };

  return (
    <group ref={group} {...props} dispose={null}>
      <Camera />
      <Lights />

      <group name="Scene">
        <mesh
          name="Table"
          geometry={nodes.Table.geometry}
          material={materials["Material.035"]}
          position={[0, 0.82, 0]}
          rotation={[0, Math.PI / 2, 0]}
          scale={[1.19, 0.06, 0.38]}
        />
        <mesh
          name="Table_Legs"
          geometry={nodes.Table_Legs.geometry}
          material={materials["Table Legs"]}
          position={[-0.01, 0.21, 0]}
          rotation={[0, Math.PI / 2, 0]}
          scale={0.48}
        />
        <group
          name="Rubics_Cube"
          position={[-0.45, 1.61, 0.89]}
          rotation={[0, Math.PI / 2, 0]}
          scale={0.87}
        >
          <mesh
            name="Cube005"
            geometry={nodes.Cube005.geometry}
            material={materials["Material.023"]}
          />
          <mesh
            name="Cube005_1"
            geometry={nodes.Cube005_1.geometry}
            material={materials["Material.024"]}
          />
          <mesh
            name="Cube005_2"
            geometry={nodes.Cube005_2.geometry}
            material={materials["Material.025"]}
          />
          <mesh
            name="Cube005_3"
            geometry={nodes.Cube005_3.geometry}
            material={materials["Material.026"]}
          />
          <mesh
            name="Cube005_4"
            geometry={nodes.Cube005_4.geometry}
            material={materials["Material.027"]}
          />
          <mesh
            name="Cube005_5"
            geometry={nodes.Cube005_5.geometry}
            material={materials["Material.028"]}
          />
        </group>
        <group
          onClick={() => setLaptopZoom(!zoomLaptop)}
          ref={laptopRef}
          name="Laptop"
          position={[-0.28, 1.19, 0.14]}
          rotation={[3.05, -0.27, 2.82]}
          scale={0.48}
        >
          <mesh
            name="Cube011"
            geometry={nodes.Cube011.geometry}
            material={materials["Material.011"]}
          />
          <mesh
            name="Cube011_1"
            geometry={nodes.Cube011_1.geometry}
            material={materials["Material.012"]}
          />
        </group>
        <group
          ref={oculusRef}
          onClick={() => setZoomOculus(!zoomOculus)}
          name="Occulus"
          position={[0.2, 0.99, 0.95]}
          rotation={[-Math.PI, 0.29, 0]}
          scale={-0.74}
          userData={{ viewPos: [6, 9, 5] }}
        >
          <mesh
            name="Cube013"
            geometry={nodes.Cube013.geometry}
            material={materials["Material.001"]}
          />
          <mesh
            name="Cube013_1"
            geometry={nodes.Cube013_1.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            name="Cube013_2"
            geometry={nodes.Cube013_2.geometry}
            material={materials["Material.045"]}
          />
          <mesh
            name="Cube013_3"
            geometry={nodes.Cube013_3.geometry}
            material={materials["Material.046"]}
          />
        </group>
        <group
          name="Car"
          position={[-0.38, 2.11, 0.08]}
          rotation={[0, -0.57, 0]}
          scale={0.98}
        >
          <mesh
            name="Cube014"
            geometry={nodes.Cube014.geometry}
            material={materials["Material.030"]}
          />
          <mesh
            name="Cube014_1"
            geometry={nodes.Cube014_1.geometry}
            material={materials["Material.031"]}
          />
          <mesh
            name="Cube014_2"
            geometry={nodes.Cube014_2.geometry}
            material={materials["Material.032"]}
          />
          <mesh
            name="Cube014_3"
            geometry={nodes.Cube014_3.geometry}
            material={materials["Material.048"]}
          />
          <mesh
            name="Cube014_4"
            geometry={nodes.Cube014_4.geometry}
            material={materials["Material.036"]}
          />
          <mesh
            name="Cube014_5"
            geometry={nodes.Cube014_5.geometry}
            material={materials["Material.037"]}
          />
          <mesh
            name="Cube014_6"
            geometry={nodes.Cube014_6.geometry}
            material={materials["Material.038"]}
          />
          <mesh
            name="Cube014_7"
            geometry={nodes.Cube014_7.geometry}
            material={materials["Material.039"]}
          />
          <mesh
            name="Cube014_8"
            geometry={nodes.Cube014_8.geometry}
            material={materials["Material.040"]}
          />
          <mesh
            name="Cube014_9"
            geometry={nodes.Cube014_9.geometry}
            material={materials.Material}
          />
        </group>
        <mesh
          name="Wall_Plain_1"
          geometry={nodes.Wall_Plain_1.geometry}
          material={materials["Material.035"]}
          position={[-0.45, 1.93, 0.07]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={[0.6, 0.04, 0.19]}
        />
        <mesh
          name="Wall_Plain_2"
          geometry={nodes.Wall_Plain_2.geometry}
          material={materials["Material.035"]}
          position={[-0.49, 1.49, 0.9]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={[0.41, 0.03, 0.13]}
        />
        <mesh
          name="Wall_Plain_3"
          geometry={nodes.Wall_Plain_3.geometry}
          material={materials["Material.035"]}
          position={[-0.49, 1.49, -0.72]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={[0.41, 0.03, 0.13]}
        />
        <group
          name="Oculus_Remotes"
          position={[-0.31, 0.95, 1.33]}
          rotation={[Math.PI, -0.79, 0]}
          scale={-0.6}
        >
          <mesh
            name="Cube019"
            geometry={nodes.Cube019.geometry}
            material={materials["Material.004"]}
          />
          <mesh
            name="Cube019_1"
            geometry={nodes.Cube019_1.geometry}
            material={materials["Material.005"]}
          />
        </group>
        <group
          ref={phoneRef}
          onClick={() => setZoomPhone(!zoomPhone)}
          name="Mobile"
          position={[-0.09, 1.11, -0.98]}
          rotation={[0, -0.8, -1.23]}
          scale={[0.17, 0.1, 0.1]}
        >
          <mesh
            name="Plane002"
            geometry={nodes.Plane002.geometry}
            material={materials["Material.014"]}
          />
          <mesh
            name="Plane002_1"
            geometry={nodes.Plane002_1.geometry}
            material={materials["Material.015"]}
          />
          <mesh
            name="Plane002_2"
            geometry={nodes.Plane002_2.geometry}
            material={materials["Material.016"]}
          />
          <mesh
            name="Plane002_3"
            geometry={nodes.Plane002_3.geometry}
            material={materials["Material.017"]}
          />
          <mesh
            name="Plane002_4"
            geometry={nodes.Plane002_4.geometry}
            material={materials["Material.018"]}
          />
          <mesh
            name="Plane002_5"
            geometry={nodes.Plane002_5.geometry}
            material={materials["Material.019"]}
          />
          <mesh
            name="Plane002_6"
            geometry={nodes.Plane002_6.geometry}
            material={materials["Material.020"]}
          />
          <mesh
            name="Plane002_7"
            geometry={nodes.Plane002_7.geometry}
            material={materials["Material.021"]}
          />
          <mesh
            name="Plane002_8"
            geometry={nodes.Plane002_8.geometry}
            material={materials["Material.022"]}
          />
        </group>
        <mesh
          name="Mobile_Stand"
          geometry={nodes.Mobile_Stand.geometry}
          material={materials["Material.013"]}
          position={[-0.08, 0.89, -0.96]}
          rotation={[0, -0.8, 0]}
          scale={-0.13}
        />
        <mesh
          name="Laptop_Stand"
          geometry={nodes.Laptop_Stand.geometry}
          material={materials["Material.010"]}
          position={[-0.21, 0.97, 0.13]}
          rotation={[Math.PI, -0.29, Math.PI]}
          scale={0.48}
        />
        <group
          name="Gaming_Consol_1"
          position={[-0.29, 0.93, -0.63]}
          rotation={[-Math.PI, 0.44, -Math.PI]}
          scale={0.61}
        >
          <mesh
            name="Cube020"
            geometry={nodes.Cube020.geometry}
            material={materials["Material.054"]}
          />
          <mesh
            name="Cube020_1"
            geometry={nodes.Cube020_1.geometry}
            material={materials["Material.055"]}
          />
          <mesh
            name="Cube020_2"
            geometry={nodes.Cube020_2.geometry}
            material={materials["Material.056"]}
          />
          <mesh
            name="Cube020_3"
            geometry={nodes.Cube020_3.geometry}
            material={materials["Material.057"]}
          />
          <mesh
            name="Cube020_4"
            geometry={nodes.Cube020_4.geometry}
            material={materials["Material.058"]}
          />
          <mesh
            name="Cube020_5"
            geometry={nodes.Cube020_5.geometry}
            material={materials["Material.075"]}
          />
          <mesh
            name="Cube020_6"
            geometry={nodes.Cube020_6.geometry}
            material={materials["Material.076"]}
          />
          <mesh
            name="Cube020_7"
            geometry={nodes.Cube020_7.geometry}
            material={materials["Material.077"]}
          />
          <mesh
            name="Cube020_8"
            geometry={nodes.Cube020_8.geometry}
            material={materials["Material.078"]}
          />
        </group>
        <group
          ref={consoleRef}
          onClick={() => setZoomConsole(!zoomConsole)}
          name="Gaming_Consol_2"
          position={[-0.2, 0.96, -0.42]}
          rotation={[0.17, -1.08, -0.12]}
          scale={0.61}
        >
          <mesh
            name="Cube021"
            geometry={nodes.Cube021.geometry}
            material={materials["Material.054"]}
          />
          <mesh
            name="Cube021_1"
            geometry={nodes.Cube021_1.geometry}
            material={materials["Material.055"]}
          />
          <mesh
            name="Cube021_2"
            geometry={nodes.Cube021_2.geometry}
            material={materials["Material.056"]}
          />
          <mesh
            name="Cube021_3"
            geometry={nodes.Cube021_3.geometry}
            material={materials["Material.057"]}
          />
          <mesh
            name="Cube021_4"
            geometry={nodes.Cube021_4.geometry}
            material={materials["Material.058"]}
          />
          <mesh
            name="Cube021_5"
            geometry={nodes.Cube021_5.geometry}
            material={materials["Material.075"]}
          />
          <mesh
            name="Cube021_6"
            geometry={nodes.Cube021_6.geometry}
            material={materials["Material.076"]}
          />
          <mesh
            name="Cube021_7"
            geometry={nodes.Cube021_7.geometry}
            material={materials["Material.077"]}
          />
          <mesh
            name="Cube021_8"
            geometry={nodes.Cube021_8.geometry}
            material={materials["Material.078"]}
          />
        </group>
        <group
          name="Plant"
          position={[-0.49, 1.48, -0.72]}
          scale={[0.1, 0.08, 0.1]}
        >
          <mesh
            name="Circle001"
            geometry={nodes.Circle001.geometry}
            material={materials["Material.051"]}
          />
          <mesh
            name="Circle001_1"
            geometry={nodes.Circle001_1.geometry}
            material={materials["Material.052"]}
          />
          <mesh
            name="Circle001_2"
            geometry={nodes.Circle001_2.geometry}
            material={materials["Material.053"]}
          />
        </group>
        <mesh
          name="Bit_coin_w_emmisin"
          geometry={nodes.Bit_coin_w_emmisin.geometry}
          material={materials["Material.041"]}
          position={[0.3, 0.99, -1.33]}
          rotation={[0, -1.13, -1.31]}
          scale={[0.12, 0.1, 0.12]}
        />
        <group name="Bit_Coin_1001" position={[0.29, 1.07, -1.35]}>
          <mesh
            name="Circle004"
            geometry={nodes.Circle004.geometry}
            material={materials["Material.041"]}
          />
          <mesh
            name="Circle004_1"
            geometry={nodes.Circle004_1.geometry}
            material={materials["Material.080"]}
          />
        </group>
        <mesh
          name="Bitcoin_Symbol"
          geometry={nodes.Bitcoin_Symbol.geometry}
          material={materials["Material.079"]}
          position={[0.32, 1.08, -1.33]}
          rotation={[1, -0.28, -2.51]}
          scale={0}
        />
        <group name="Bit_Coin_1" position={[0.29, 1.07, -1.35]}>
          <mesh
            name="Circle003"
            geometry={nodes.Circle003.geometry}
            material={materials["Material.041"]}
          />
          <mesh
            name="Circle003_1"
            geometry={nodes.Circle003_1.geometry}
            material={materials["Material.080"]}
          />
        </group>
      </group>

      <ContactShadows
        rotation-x={Math.PI / 2}
        position={[0, -35, 0]}
        opacity={0.2}
        width={200}
        height={200}
        blur={1}
        far={50}
      />
    </group>
  );
}

useGLTF.preload("/Services_Final.glb");
