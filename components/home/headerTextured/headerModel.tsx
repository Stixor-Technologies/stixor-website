/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Banner: THREE.Mesh;
  };
  materials: {};
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const _mainTexture = useRef(null);
  const texture2 = useTexture("/images/textures/Banner.jpg");
  texture2.flipY = false;

  const { nodes, materials } = useGLTF(
    "/assets/models/Banner_Without_Textures.glb"
  ) as unknown as GLTFResult;

  return (
    <group {...props} ref={_mainTexture} dispose={null}>
      <mesh
        geometry={nodes.Banner.geometry}
        material={nodes.Banner.material}
        position={[-13.23, 0.26, -0.04]}
      >
        <meshBasicMaterial map={texture2} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/Banner_Without_Textures.glb");
